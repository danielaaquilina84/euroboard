legend {
	@extend h2;
	text-align: left;
}

span.sub-legend {
	@extend h3;
	display: block;
	text-align: left;
	padding: 36px 0 30px;
}

legend > span.sub-legend {
	padding-top: 0 !important;
}

button,
a.button {
	@extend p;
	display: inline-block;
	cursor: pointer;
	width: 100%;
	min-height: 40px;
	font-weight: bold;
	vertical-align: middle;
	line-height: 40px;
	background: $cyan;
	color: $white;
	border: none;
	padding: 5px;
	text-align: center;
	text-decoration: none;
	
	&:hover {
		@include toggleLightDark(color, $black, $white);
		@include toggleLightDark(background, $white, $black);
		cursor: pointer;
		
		z-index: 999;
	}

	&:focus {
		background: $yellow;
		@include toggleLightDark(color, $black, $black);
		outline: 5px solid $yellow;
		outline-offset: 2px;
		border-radius: 0 !important;
		cursor: pointer;
		
		z-index: 999;
	}
	
	&:focus:hover {
		text-decoration: underline;
		
		z-index: 999;
	}
	
	&:disabled,
	&[disabled] {
		@include toggleLightDark(background, $gray-300 !important, $gray-700 !important);
		@include toggleLightDark(color, $gray-500 !important, $gray-600 !important);
	}

	&:last-child,
	&:last-of-type {
		margin-bottom: 0;
	}
}
	
.text-input,
.radio-input {
	display: block;
	position: relative;

	min-height: $input-size;

	@extend p;
	padding: 0;

	margin-bottom: 30px;

	clear: left;
}

.radio-input {
	padding-left: $radios-size;

	&:last-child,
	&:last-of-type {
		margin-bottom: 0;
	}
}

label {
	@extend p;
	display: block;
	font-weight: 600;
	padding-bottom: 0;

	&.hidden {
		@include sr-only;
	}

	&.hidden ~ input {
		margin: 0;
	}
}

.label-hint {
	@extend p;
	@include toggleLightDark(color, $gray-600, $gray-300);
	padding-bottom: 0;
	display: block;
}

input[type="text"],
textarea {
	@extend p;
	box-sizing: border-box;
	width: 100%;
	min-height: 40px;
	
	margin-top: 15px;
	padding: $input-padding;

	border: $border-width-form-element solid;
	border-radius: 0;

	@include toggleLightDark(background, $true-white, $gray-900);
	@include toggleLightDark(color, $black, $white);
	@include toggleLightDark(border-color, $input-border-color, $true-black);

	// Disable inner shadow and remove rounded corners
	-webkit-appearance: none;
	appearance: none;

	&:focus {
		outline: $border-width-form-element solid $input-focus-color;
		outline-offset: 0;
		@include toggleLightDark(background, inherit, $gray-900);
		@include toggleLightDark(border-color, inherit, $true-black);
		@include toggleLightDark(box-shadow, inset 0 0 0 $border-focus-width, inset 0 0 0 $border-focus-width $true-black);
	}

	&:invalid {
		border: $border-width-form-element solid $input-error-color;
	}

	&:hover {
		box-shadow: 0 0 0 3px $cyan;
		@include toggleLightDark(background, $gray-200, $gray-800);
		@include toggleLightDark(border-width, inherit, 3px);
	}

}

textarea {
	resize: vertical;
}

input[type="radio"] {
	$input-offset: ($touch-target-size - $radios-size) / 2;
	cursor: pointer;

	position: absolute;

	z-index: 1;
	top: $input-offset * -1;
	left: $input-offset * -1;

	width: $touch-target-size;
	height: $touch-target-size;
	margin: 0;

	opacity: 0;

	~ label {
		display: inline-block;
		height: $input-size;
		margin-top: 0;
		margin-bottom: 0;
		padding: 0px $radios-label-padding-left-right;
		cursor: pointer;
		// remove 300ms pause on mobile
		touch-action: manipulation;
	
		font-weight:    600;

		&::before {
			content: "";
			box-sizing: border-box;
			position: absolute;
			top: 0;
			left: 0;

			width: $radios-size;
			height: $radios-size;

			@include toggleLightDark(border, 2px solid $black, 3px solid $white);
			border-radius: 50%;
			background: transparent;
		}

		&::after {
			content: "";

			position: absolute;
			top: 10px;
			left: 10px;

			width: 0;
			height: 0;

			border: 10px solid;
			border-radius: 50%;
			opacity: 0;
			
			@include toggleLightDark(border-color, $cyan, $cyan);
			@include toggleLightDark(background, $black, $black);
		}
	
	}

	&:focus + label::before {
		border-width: 4px;
		box-shadow: 0 0 0 3px $cyan;
	}

	&:hover + label::before {
		box-shadow: 0 0 0 3px $cyan;
		@include toggleLightDark(border-width, 3px, 3px);
		@include toggleLightDark(background, $gray-200, $gray-700);
	}

	&:checked + label::after {
		opacity: 1;
	}

	~ .label-hint,  {
		padding-right: $radios-label-padding-left-right;
		padding-left: $radios-label-padding-left-right;
	}

	~ input[type="text"]  {
		margin-left: $radios-label-padding-left-right;
		width: calc(100% - #{$radios-label-padding-left-right});
	}

}